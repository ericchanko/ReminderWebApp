<div class="container">
  <h1 class="page-header">Edit</h1>
  <form action=<%= "/reminder/update/" + reminderItem.id %> method="POST">
    <div class="form-group">
      <label for="title">Title</label>
      <input type="text" name="title" class="form-control" id="titleInput" value="<%= reminderItem.title %>">
    </div>
    <div class="form-group">
      <label for="description">Description</label>
      <textarea class="form-control" id="descriptionInput" rows="3" placeholder="Description" name="description"><%= reminderItem.description %></textarea>
    </div>

    <%
    let now = new Date()
    let yyyy = now.getFullYear();
    let mm = now.getMonth()+1;
    let dd = now.getDate();
    let hr = now.getHours()
    let min = now.getMinutes()
    
    if (dd < 10){ dd='0'+dd } 
    if (mm < 10){ mm='0'+mm } 
    if (hr < 10){ hr='0'+hr }
    if (min < 10){ min='0'+min }
    
    let today = yyyy+'-'+mm+'-'+dd+'T'+hr+':'+min;
    %>

    <div class="form-group">
        <label for="date">Remind me on</label>
        <input type="datetime-local" id="notify-date" name="datetime" value="<%= reminderItem.datetime %>" min="<%= today %>">
        <button type="button" onclick="clearValue()" class="btn btn-sm btn-warning">Clear</button>
    </div>
    
    <div class="form-group">
                <label for="tag">Add comma separated tags </label>
                <input type="text" id="tag" name="tag">
    </div>

    <div class="checkbox subtask-form">
        <label for="subtasks">Subtasks</label>
        <ul id="subtask-list" class="list-unstyled" name="subtasks">

            <% for (let key in reminderItem.subtasks) { %>
                <li class="form-control subtask-items">
                    <label>
                        <% if (reminderItem.subtasks[key] === "1") { %>
                            <input type="hidden" name="subtasks[<%= key %>]" value="0" disabled>
                            <input type="checkbox" name="subtasks[<%= key %>]" value="1" onclick="setDisabled(this)" class="checkboxes" checked style="margin-right:5px">
                        <% } else { %>
                            <input type="hidden" name="subtasks[<%= key %>]" value="0">
                            <input type="checkbox" name="subtasks[<%= key %>]" value="1" onclick="setDisabled(this)" class="checkboxes" style="margin-right:5px">
                        <% } %>
                        <span class="checkedLabel"><%= key %></span>
                </label>
                <span class="delete-task" onclick="deleteSubtask(this)">×</span>
                </li>
            <% } %>
        </ul>

        <div class="subtask-input-container">
            <input type="text" placeholder="E.g. Buy milk" id="subtask-input" class="form-control">
            <span class="add-task" onclick="newSubtask()">+</span>
        </div>
    </div>

    <div class="form-group">
      <label for="completed">Completed</label>
      <div class="radio">
        <label>
          <% if (reminderItem.completed == true) { %>
            <input type="radio" name="completed" id="true" value="true" checked="checked">
          <% } else { %>
            <input type="radio" name="completed" id="true" value="true">
          <% } %>
          True
        </label>
      </div>
      <div class="radio">
        <label>
          <% if (reminderItem.completed == false) { %>
            <input type="radio" name="completed" id="false" value="false" checked="checked">
          <% } else { %>
            <input type="radio" name="completed" id="false" value="false">
          <% } %>
          False
        </label>
      </div>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
  </form>
</div>
<script>
    let datepickerElem = document.querySelector("#notify-date")
    function clearValue() { datepickerElem.value = "" }
    
    function setDisabled(thisElem) {
        // need 2 .previousSibling b/c using only 1 targets a #text element ???
        if (thisElem.previousSibling.previousSibling.disabled) {
            thisElem.previousSibling.previousSibling.disabled = false
        }
        else {
            thisElem.previousSibling.previousSibling.disabled = true
        }
    }
    function newSubtask() {
        let subtaskListElem = document.querySelector("#subtask-list")
        let inputFieldElem = document.querySelector("#subtask-input")
        let textInput = inputFieldElem.value
        let textNode = document.createTextNode(textInput)

        if (textInput.trim() != 0) {

            // need a hidden element b/c u cant post unchecked checkboxes
            let inputElem = document.createElement("INPUT")
            inputElem.setAttribute("type", "hidden")
            inputElem.setAttribute("name", `subtasks[${textInput}]`)
            inputElem.setAttribute("value", "0")

            let inputElem2 = document.createElement("INPUT")
            inputElem2.setAttribute("type", "checkbox")
            inputElem2.setAttribute("name", `subtasks[${textInput}]`)
            inputElem2.setAttribute("value", "1")
            inputElem2.setAttribute("onclick", "setDisabled(this)")
            inputElem2.setAttribute("class", "checkboxes")

            // delete sub task
            let spanDeleteElem = document.createElement("SPAN")
            spanDeleteElem.setAttribute("class", "delete-task")
            spanDeleteElem.innerText = "×"
            spanDeleteElem.setAttribute("onclick", "deleteSubtask(this)")

            let li = document.createElement('LI')
            li.setAttribute("class", "form-control subtask-items")

            let span = document.createElement("SPAN")
            span.setAttribute("class", "checkedLabel")

            let text = document.createTextNode(textInput)
            span.appendChild(text)

            let label = document.createElement("LABEL")

            label.appendChild(inputElem)
            label.appendChild(inputElem2)
            label.appendChild(span)
            li.appendChild(label)
            li.appendChild(spanDeleteElem)
            subtaskListElem.appendChild(li)
        }
        inputFieldElem.value = "" 
    }
    function deleteSubtask(thisElem) {
		let listItem = thisElem.parentNode;
		let ul = listItem.parentNode;
		ul.removeChild(listItem);
    }
</script>
